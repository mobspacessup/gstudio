"use client"

import type React from "react"

import { useState, useRef, useEffect } from "react"
import { Send, X, MessageSquare } from "lucide-react"
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"

// –ü—Ä–µ–¥–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã
const predefinedAnswers: Record<string, string> = {
  –∫—É—Ä—Å: "–£ –Ω–∞—Å –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫—É—Ä—Å–æ–≤ –ø–æ –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—é –º–µ–±–µ–ª–∏: START, START+, PRO –∏ PRO+. –ü–æ–¥—Ä–æ–±–Ω–µ–µ –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∫—É—Ä—Å–æ–≤.",
  —Ü–µ–Ω–∞: "–°—Ç–æ–∏–º–æ—Å—Ç—å –∫—É—Ä—Å–æ–≤ –≤–∞—Ä—å–∏—Ä—É–µ—Ç—Å—è –æ—Ç 20 000 –¥–æ 33 500 MDL. –°–µ–π—á–∞—Å –¥–µ–π—Å—Ç–≤—É–µ—Ç –∞–∫—Ü–∏—è: —Å–∫–∏–¥–∫–∞ 2000 MDL –ø—Ä–∏ –ø–æ–ª–Ω–æ–π –æ–ø–ª–∞—Ç–µ!",
  —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ:
    "–ó–∞–Ω—è—Ç–∏—è –ø—Ä–æ—Ö–æ–¥—è—Ç –≤ —É—Ç—Ä–µ–Ω–Ω–µ–µ (9:00-12:00) –∏–ª–∏ –≤–µ—á–µ—Ä–Ω–µ–µ –≤—Ä–µ–º—è (19:00-22:00), —á–µ—Ä–µ–∑ –¥–µ–Ω—å, 2-3 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é.",
  –∞–¥—Ä–µ—Å: "–ú—ã –Ω–∞—Ö–æ–¥–∏–º—Å—è –ø–æ –∞–¥—Ä–µ—Å—É: –≥. –ö–∏—à–∏–Ω–µ–≤, —à. –ú—É–Ω—á–µ—à—Ç—å 147/1",
  –∫–æ–Ω—Ç–∞–∫—Ç—ã: "–í—ã –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É +37378932008 –∏–ª–∏ –ø–æ email: curs@g-studio.md",
  —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ: "–î–∞, –º—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ª—é–±–æ–≥–æ –∏–∑ –Ω–∞—à–∏—Ö –∫—É—Ä—Å–æ–≤!",
  –±–∞–∑–∏—Å:
    "–ë–∞–∑–∏—Å –ú–µ–±–µ–ª—å—â–∏–∫ - —ç—Ç–æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–µ–±–µ–ª–∏. –ù–∞ –Ω–∞—à–∏—Ö –∫—É—Ä—Å–∞—Ö –≤—ã –Ω–∞—É—á–∏—Ç–µ—Å—å —Ä–∞–±–æ—Ç–∞—Ç—å —Å –Ω–µ–π —Å –Ω—É–ª—è.",
  –∑–∞–ø–∏—Å–∞—Ç—å—Å—è:
    "–ß—Ç–æ–±—ã –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫—É—Ä—Å, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫—É—Ä—Å–æ–≤, –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –∫—É—Ä—Å –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫—É—Ä—Å'.",
  –æ–ø–ª–∞—Ç–∞:
    "–û–ø–ª–∞—Ç—É –º–æ–∂–Ω–æ –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –±–∞–Ω–∫–æ–≤—Å–∫–∏–º –ø–µ—Ä–µ–≤–æ–¥–æ–º –∏–ª–∏ –Ω–∞–ª–∏—á–Ω—ã–º–∏ —á–µ—Ä–µ–∑ –±–∞–Ω–∫. –ü–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —Å—á–µ—Ç –∏ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã.",
}

export default function Chatbot() {
  const [isOpen, setIsOpen] = useState(false)
  const [messages, setMessages] = useState<{ text: string; isUser: boolean; time: string }[]>([
    {
      text: "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ G-Studio. –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?",
      isUser: false,
      time: new Date().toLocaleTimeString([], { hour: "2-digit", minute: "2-digit" }),
    },
  ])
  const [inputValue, setInputValue] = useState("")
  const [isSubmitting, setIsSubmitting] = useState(false)
  const messagesEndRef = useRef<HTMLDivElement>(null)

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –≤–Ω–∏–∑ –ø—Ä–∏ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö
  useEffect(() => {
    messagesEndRef.current?.scrollIntoView({ behavior: "smooth" })
  }, [messages])

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram, –µ—Å–ª–∏ –±–æ—Ç –Ω–µ —Å–º–æ–≥ –æ—Ç–≤–µ—Ç–∏—Ç—å
  const sendToTelegram = async (message: string) => {
    try {
      const TELEGRAM_BOT_TOKEN = "7587937962:AAGlFzrR-x2Fb4QEtIWB86mAPenZV7ffyEo"
      const TELEGRAM_CHAT_ID = "-1002592531264"

      const telegramUrl = `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`

      const messageText = `
üí¨ *–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ —á–∞—Ç-–±–æ—Ç–∞ –Ω–∞ —Å–∞–π—Ç–µ*

üìù *–°–æ–æ–±—â–µ–Ω–∏–µ*: ${message}
‚ÑπÔ∏è *–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ*: –ë–æ—Ç –Ω–µ —Å–º–æ–≥ –Ω–∞–π—Ç–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å.

üìÖ *–î–∞—Ç–∞*: ${new Date().toLocaleString("ru-RU")}
      `

      await fetch(telegramUrl, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          chat_id: TELEGRAM_CHAT_ID,
          text: messageText,
          parse_mode: "Markdown",
        }),
      })
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram:", error)
    }
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const findAnswer = (question: string): string | null => {
    const lowerQuestion = question.toLowerCase()

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥–æ–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ
    for (const [keyword, answer] of Object.entries(predefinedAnswers)) {
      if (lowerQuestion.includes(keyword.toLowerCase())) {
        return answer
      }
    }

    return null
  }

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault()
    if (!inputValue.trim() || isSubmitting) return

    const userMessage = {
      text: inputValue,
      isUser: true,
      time: new Date().toLocaleTimeString([], { hour: "2-digit", minute: "2-digit" }),
    }

    setMessages((prev) => [...prev, userMessage])
    setInputValue("")
    setIsSubmitting(true)

    // –ò—â–µ–º –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å
    const answer = findAnswer(userMessage.text)

    setTimeout(() => {
      let botResponse

      if (answer) {
        // –ï—Å–ª–∏ –Ω–∞—à–ª–∏ –æ—Ç–≤–µ—Ç –≤ –ø—Ä–µ–¥–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–∞—Ö
        botResponse = {
          text: answer,
          isUser: false,
          time: new Date().toLocaleTimeString([], { hour: "2-digit", minute: "2-digit" }),
        }
      } else {
        // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –æ—Ç–≤–µ—Ç
        botResponse = {
          text: "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –º–æ–≥—É –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å. –•–æ—Ç–∏—Ç–µ, —á—Ç–æ–±—ã –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∑–∞–ª—Å—è —Å –≤–∞–º–∏?",
          isUser: false,
          time: new Date().toLocaleTimeString([], { hour: "2-digit", minute: "2-digit" }),
        }

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram, –µ—Å–ª–∏ –±–æ—Ç –Ω–µ —Å–º–æ–≥ –æ—Ç–≤–µ—Ç–∏—Ç—å
        sendToTelegram(userMessage.text)
      }

      setMessages((prev) => [...prev, botResponse])
      setIsSubmitting(false)
    }, 1000)
  }

  return (
    <>
      {/* –ö–Ω–æ–ø–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —á–∞—Ç–∞ */}
      {!isOpen && (
        <button
          onClick={() => setIsOpen(true)}
          className="fixed bottom-4 right-4 z-50 bg-primary text-primary-foreground rounded-full p-4 shadow-lg hover:bg-primary/90 transition-all"
          aria-label="–û—Ç–∫—Ä—ã—Ç—å —á–∞—Ç"
        >
          <MessageSquare className="h-6 w-6" />
        </button>
      )}

      {/* –û–∫–Ω–æ —á–∞—Ç–∞ */}
      {isOpen && (
        <div className="fixed bottom-4 right-4 z-50 w-80 sm:w-96 bg-background rounded-lg shadow-xl border overflow-hidden flex flex-col">
          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
          <div className="bg-primary text-primary-foreground p-3 flex justify-between items-center">
            <h3 className="font-semibold">–ß–∞—Ç —Å G-Studio</h3>
            <button
              onClick={() => setIsOpen(false)}
              className="text-primary-foreground/80 hover:text-primary-foreground"
              aria-label="–ó–∞–∫—Ä—ã—Ç—å —á–∞—Ç"
            >
              <X className="h-5 w-5" />
            </button>
          </div>

          {/* –°–æ–æ–±—â–µ–Ω–∏—è */}
          <div className="flex-1 p-3 overflow-y-auto max-h-96 bg-muted/30">
            {messages.map((msg, index) => (
              <div key={index} className={`mb-3 flex ${msg.isUser ? "justify-end" : "justify-start"}`}>
                <div
                  className={`max-w-[80%] rounded-lg px-3 py-2 ${
                    msg.isUser ? "bg-primary text-primary-foreground" : "bg-muted"
                  }`}
                >
                  <p className="text-sm">{msg.text}</p>
                  <p className="text-xs mt-1 opacity-70 text-right">{msg.time}</p>
                </div>
              </div>
            ))}
            <div ref={messagesEndRef} />
          </div>

          {/* –§–æ—Ä–º–∞ –≤–≤–æ–¥–∞ */}
          <form onSubmit={handleSubmit} className="p-3 border-t bg-background">
            <div className="flex gap-2">
              <Input
                value={inputValue}
                onChange={(e) => setInputValue(e.target.value)}
                placeholder="–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..."
                disabled={isSubmitting}
                className="flex-1"
              />
              <Button type="submit" size="icon" disabled={isSubmitting}>
                <Send className="h-4 w-4" />
              </Button>
            </div>
          </form>
        </div>
      )}
    </>
  )
}
